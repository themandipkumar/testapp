{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyData\\\\ReactJS\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet name = \"MandipisLive FT\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); //whether dark mode is enable is not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"MaaheSBI\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter Text to Change Format\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","TextForm","About","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","name","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/MyData/ReactJS/textutils/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About'; \nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\nlet name = \"MandipisLive FT\"\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enable is not\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else {\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n  return (\n  <> \n  <Navbar title=\"MaaheSBI\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  <TextForm showAlert={showAlert} heading=\"Enter Text to Change Format\" mode={mode}/>\n  <About/>\n  </div>\n  {/* <Navbar/> */}\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,IAAIC,IAAI,GAAG,iBAAiB;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAK,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMa,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGR,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;MAC5CR,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MACI;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IAClD;EACF,CAAC;EACD,oBACAV,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA,CAACP,MAAM;MAAC2B,KAAK,EAAC,UAAU;MAACC,SAAS,EAAC,OAAO;MAACf,IAAI,EAAEA,IAAK;MAACQ,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjFzB,OAAA,CAACF,KAAK;MAACU,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtBzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,gBAC/BnB,OAAA,CAACN,QAAQ;QAACgB,SAAS,EAAEA,SAAU;QAACiB,OAAO,EAAC,6BAA6B;QAACrB,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnFzB,OAAA,CAACL,KAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eAEJ,CAAC;AAEL;AAACpB,EAAA,CAlCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}